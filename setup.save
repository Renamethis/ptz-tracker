#!/bin/bash
output=$(cat /etc/*-release)
if ! echo $output  | grep "Ubuntu"
then
	echo "OS is incompatible"
	exit 1
fi
sudo apt-get upgrade
sudo apt-get update
sudo apt-get install libhdf5-serial-dev hdf5-tools libhdf5-dev zlib1g-dev zip libjpeg8-dev liblapack-dev libblas-dev gfortran
sudo apt-get install python3
sudo apt-get install virtualenv
virtualenv -p python3 venv
sudo chmod -R 770 venv
output=$(ls)
if ! echo $output | grep "venv"
then
	echo "Venv error!"
	exit 1
fi
echo "Venv is ok!"
curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
sudo python3 get-pip.py
. ./venv/bin/activate
pip3 install -r requirements.txt
#pip3 install --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v44 tensorflow
git clone https://github.com/tensorflow/models.git
git clone https://github.com/FalkTannhaeuser/python-onvif-zeep.git
cd python-onvif-zeep
python3 setup.py install
pip3 install --upgrade onvif_zeep
cd ..
#wget http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v2_coco_2018_03_29.tar.gz
#tar -xzvf ssd_mobilenet_v2_coco_2018_03_29.tar.gz
#cp ssd_mobilenet_v2_coco_2018_03_29/frozen_inference_graph.pb detection_models/ssd_mobilenet_v2_body.pb
#rm ssd_mobilenet_v2_coco_2018_03_29.tar.gz
sudo apt-get install protobuf-compiler python-pil python-lxml python-tk
cd models/research
wget -O protobuf.zip https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0/protoc-3.14.0-linux-aarch_64.zip

unzip protobuf.zip
./bin/protoc object_detection/protos/*.proto --python_out=.
export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim
cd ..
cd ..
#python2.7 conf/conf.py
#sudo python2 setup.py $str
